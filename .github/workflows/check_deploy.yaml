name: 'Check, Publish to Docker Hub, Deploy'
on: push
jobs:
  checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - name: Set up Python 3.9
        uses: actions/setup-python@v1
        with:
          python-version: 3.9
      - name: Install requirements
        run: utils/process_env.sh
      - name: echo workspace
        run: echo $GITHUB_WORKSPACE
        shell: bash
      # - name: Pytest
      #   run: pytest . --cov ee --cov test --cov-report xml
      # - name: Tests report
      #   uses: codecov/codecov-action@v1
      #   with:
      #     file: ./coverage.xml
      #     name: codecov-umbrella
      - name: Black
        run: black . --check -l 81
#      - name: mypy # repo needs to either not have __init__.py or not have a dash
#        run: mypy *py
      - name: Pylint
        run: pylint *py

name: publish
on:
  workflow_dispatch:
#  publish:
#    needs:
#      - checks
    runs-on:
      - ubuntu-latest
    env:
      LOGIN: '${{ secrets.DOCKER_LOGIN }}'
      NAME: '${{ secrets.DOCKER_NAME }}'
    steps:
      - name: Login to docker.io
        run: >-
          echo ${{ secrets.DOCKER_PWD }} | docker login --username ${{
          secrets.DOCKER_LOGIN }} --password-stdin
      - uses: actions/checkout@main
      - name: Build image
        run: 'docker build -t $LOGIN/$NAME:${GITHUB_REF:10} -f Dockerfile .'
      - name: Push image tag to docker.io
        run: 'docker push $LOGIN/$NAME:${GITHUB_REF:10}'
      - name: Tag last release as latest
        run: 'docker tag $LOGIN/$NAME:${GITHUB_REF:10} $LOGIN/$NAME:latest'
      - name: Push image tag latest to docker.io
        run: 'docker push $LOGIN/$NAME:latest'
name: gcloud
on:
    workflow_dispatch:
        runs-on: ubuntu-latest
        steps:
            # needs gcloud sdk inited
            - name: publish
              run: 'gcloud builds submit --tag gcr.io/${gcloud config get-value project}/earnest'
	    - name: deploy
    	      run: 'gcloud run deploy --image gcr.io/${gcloud config get-value project}/earnest --platform managed'
    	      # this needs service name, region (us-central1), unauthenticated invocations (y). returns service url
